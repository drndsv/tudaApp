import { useParams } from "react-router-dom";
import { useState } from "react";
import Header from "../components/Header";
import InfoCard from "../components/InfoCard";
import PrimaryButton from "../components/PrimaryButton";
import { Event } from "../types/models";

const mockEvent: Event = {
  id: 1,
  title: "–í–æ–ª–æ–Ω—Ç—ë—Ä—Å–∫–∞—è —É–±–æ—Ä–∫–∞ –ø–∞—Ä–∫–∞",
  city: "–ú–æ—Å–∫–≤–∞",
  date: "2025-07-01T18:00:00Z",
  description: "–£–±–∏—Ä–∞–µ–º –ø–∞—Ä–∫ –≤–º–µ—Å—Ç–µ —Å –∂–∏—Ç–µ–ª—è–º–∏ —Ä–∞–π–æ–Ω–∞!",
  organizer_id: 1,
  participants_number: 100,
  volunteers_number: 5,
  status: "PUBLISHED",
  photo: {
    id: 1,
    upload_id: "uuid",
    filename: "cat.jpg",
  },
};

export default function EventDetailsPage() {
  const { id } = useParams();
  const event = mockEvent;

  const isPast = new Date(event.date) < new Date();

  const [isParticipant, setIsParticipant] = useState(false);
  const [isVolunteerPending, setIsVolunteerPending] = useState(false);

  const handleJoin = () => {
    setIsParticipant(true);
    setIsVolunteerPending(false);
  };

  const handleVolunteer = () => {
    setIsVolunteerPending(true);
    setIsParticipant(false);
  };

  const handleCancel = () => {
    setIsParticipant(false);
    setIsVolunteerPending(false);
  };

  return (
    <div className="bg-cream min-h-screen text-dark">
      <Header />
      <main className="max-w-6xl mx-auto px-4 py-8">
        <h1 className="text-3xl font-bold mb-4">{event.title}</h1>
        <p className="text-lg font-medium text-gray-700 mb-16">
          –°—Ç–∞—Ç—É—Å: {isPast ? "–ó–∞–≤–µ—Ä—à–µ–Ω–æ" : "–ê–∫—Ç–∏–≤–Ω–æ"}
        </p>
        <div className="flex flex-col lg:flex-row gap-8 items-start">
          {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å */}
          <div className="flex-1 flex flex-col self-stretch">
            <div className="rounded-2xl overflow-hidden bg-gray-200 h-80 mb-4 shadow-md">
              {event.photo?.filename ? (
                <img
                  src={`/uploads/${event.photo.filename}`}
                  alt={event.title}
                  className="w-full h-full object-cover"
                />
              ) : (
                <div className="flex items-center justify-center h-full text-gray-500">
                  –ë–µ–∑ —Ñ–æ—Ç–æ
                </div>
              )}
            </div>

            <div className="flex flex-col gap-4">
              {isVolunteerPending && (
                <div className="text-sm text-gray-600 px-2">
                  –û–∂–∏–¥–∞–π—Ç–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞ –≤–æ–ª–æ–Ω—Ç—ë—Ä—Å—Ç–≤–æ
                </div>
              )}

              {isParticipant && (
                <div className="text-sm text-gray-600 px-2">
                  –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ —É—á–∞—Å—Ç–Ω–∏–∫
                </div>
              )}

              {!isParticipant && !isVolunteerPending && (
                <>
                  <PrimaryButton disabled={isPast} onClick={handleJoin}>
                    –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å
                  </PrimaryButton>
                  <PrimaryButton disabled={isPast} onClick={handleVolunteer}>
                    –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤–æ–ª–æ–Ω—Ç—ë—Ä—Å—Ç–≤–æ
                  </PrimaryButton>
                </>
              )}

              {(isParticipant || isVolunteerPending) && (
                <PrimaryButton disabled={isPast} onClick={handleCancel}>
                  –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —É—á–∞—Å—Ç–∏—è
                </PrimaryButton>
              )}
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å */}
          <div className="flex-1 flex flex-col gap-4 self-stretch">
            <InfoCard title="–û–ø–∏—Å–∞–Ω–∏–µ" className="min-h-40">
              {event.description || "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è."}
            </InfoCard>

            <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
              <InfoCard title="–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤">
                {event.participants_number}/200
              </InfoCard>
              <InfoCard title="–í–æ–ª–æ–Ω—Ç—ë—Ä–æ–≤">
                {event.volunteers_number}/100
              </InfoCard>
              <InfoCard title="–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è" className="min-h-40">
                <ul className="space-y-1">
                  <li>üìÖ {new Date(event.date).toLocaleDateString()}</li>
                  <li>
                    üïí{" "}
                    {new Date(event.date).toLocaleTimeString([], {
                      hour: "2-digit",
                      minute: "2-digit",
                    })}
                  </li>
                  <li>üìç {event.city}</li>
                  <li>üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è ID: {event.organizer_id}</li>
                </ul>
              </InfoCard>
              <InfoCard title="–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ">
                <ul className="space-y-1">
                  <li>üìû +7 (999) 123-45-67</li>
                  <li>üë§ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤</li>
                  <li>‚úâÔ∏è ivan@example.com</li>
                </ul>
              </InfoCard>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}
